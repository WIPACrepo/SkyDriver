name: wipac ci/cd

on:
  push:
    # only branch pushes
    branches: [ '**' ]
    tags-ignore: [ '**' ]

env:
  HERE_URL: skydriver.ci-test.aq
  THIS_IMAGE_WITH_TAG: 'ghcr.io/wipacrepo/skydriver:vX.Y.Z'
  EWMS_PILOT_TASK_TIMEOUT: 999
  SCAN_BACKLOG_RUNNER_SHORT_DELAY: 1
  SCAN_BACKLOG_RUNNER_DELAY: 1
  SCAN_BACKLOG_PENDING_ENTRY_TTL_REVIVE: 200
  SCAN_POD_WATCHDOG_DELAY: 1
  LOG_LEVEL: debug
  # mandatory env vars...
  EWMS_ADDRESS: http://localhost:8081
  EWMS_TOKEN_URL: 65f3b929
  EWMS_CLIENT_ID: b75a974d
  EWMS_CLIENT_SECRET: 411b16fe
  S3_URL: a4f92304
  S3_ACCESS_KEY_ID: 36c5c849
  S3_ACCESS_KEY_ID__K8S_SECRET_KEY: 230ec9dc
  S3_SECRET_KEY: 8dea68a1
  S3_SECRET_KEY__K8S_SECRET_KEY: cdf7c60b
  S3_BUCKET: 72017610
  K8S_SECRET_NAME: super-secrets
  MIN_SKYMAP_SCANNER_TAG: "v3.1.2" # TODO: remove once skyscan v4 is out (that's the real min)


jobs:

  py-versions:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.versions.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - id: versions
        uses: WIPACrepo/wipac-dev-py-versions-action@v2.7


  #############################################################################
  # LINTERS
  #############################################################################

  flake8:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-flake8-action@v1.3
        with:
          max-complexity: 10  # ideal is ~10-15

  mypy:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}
      - uses: WIPACrepo/wipac-dev-mypy-action@v2.0


  #############################################################################
  # PACKAGING
  #############################################################################

  py-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          ref: ${{ github.ref }}  # dont lock to sha (action needs to push)
      - uses: WIPACrepo/wipac-dev-py-setup-action@v5.1
        with:
          mode: PACKAGING
          python_min: 3.13
          author: WIPAC Developers
          author_email: developers@icecube.wisc.edu
          keywords_comma: "WIPAC, IceCube, Skymap Scanner, Reconstruction, IceTray, EWMS"
          auto_mypy_option: True
          package_dirs: skydriver s3_sidecar ewms_init_container

  py-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          tags: skydriver:py-dep-this
          load: true
      - uses: WIPACrepo/wipac-dev-py-dependencies-action@v3.0


  #############################################################################
  # TESTS
  #############################################################################

  unit-tests:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}

      - name: pip install
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          pip install --upgrade pip wheel setuptools
          pip install .[tests]

      - name: test
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          pytest -vvv tests/unit --exitfirst

      - name: Dump logs
        if: always()
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          cat pytest.logs || true

  integration-tests:
    needs: [ py-versions ]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        py3: ${{ fromJSON(needs.py-versions.outputs.matrix) }}
    services:
      mongo:
        image: bitnami/mongodb:4
        ports:
          - 27017:27017
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py3 }}

      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=min
          file: Dockerfile
          tags: wipac/skydriver:local
          load: true

      - name: test
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          
          pip install .[tests]
          python tests/integration/dummy_ewms.py &> ./dummy_ewms.out &
          
          export LATEST_TAG=$( \
              curl -I https://github.com/icecube/skymap_scanner/releases/latest \
              | awk -F '/' '/^location/ {print  substr($NF, 1, length($NF)-1)}' \
              | sed 's/v//' \
          )
          echo $LATEST_TAG  # this tag may be off if there's a delay between GH release & docker hub

          # make test script
          DIR="test-script-dir"
          mkdir $DIR
          echo "#!/bin/bash" >> $DIR/test-script.sh
          echo "set -xe" >> $DIR/test-script.sh
          echo "pip install .[tests]" >> $DIR/test-script.sh
          echo "python -m pytest -vvv tests/integration --exitfirst" >> $DIR/test-script.sh
          chmod +x $DIR/test-script.sh
          cat $DIR/test-script.sh

          docker run --network="host" --rm -i --name test \
              --env LATEST_TAG=$LATEST_TAG \
              --env THIS_IMAGE_WITH_TAG=$THIS_IMAGE_WITH_TAG \
              --env K8S_SECRET_NAME=$K8S_SECRET_NAME \
              $(env | grep '^SKYSCAN_' | awk '$0="--env "$0') \
              $(env | grep '^EWMS_' | awk '$0="--env "$0') \
              $(env | grep '^S3_' | awk '$0="--env "$0') \
              $(env | grep '^CI' | awk '$0="--env "$0') \
              $(env | grep '^CI_' | awk '$0="--env "$0') \
              $(env | grep '^SCAN_' | awk '$0="--env "$0') \
              $(env | grep '^MIN_SKYMAP_SCANNER_TAG' | awk '$0="--env "$0') \
              $(env | grep '^HERE_URL' | awk '$0="--env "$0') \
              --mount type=bind,source=$(realpath $DIR),target=/local/$DIR \
              wipac/skydriver:local \
              /local/$DIR/test-script.sh
      #
      - name: dump test logs
        if: always()
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          docker logs test || true
      - name: dump dummy-ewms logs
        if: always()
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          cat ./dummy_ewms.out
      - name: dump mongo logs
        if: always()
        run: |
          set -euo pipefail; echo "now: $(date -u +"%Y-%m-%dT%H:%M:%S.%3N")"
          docker logs "${{ job.services.mongo.id }}" || true

  test-build-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}  # lock to triggered commit (github.ref is dynamic)
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          tags: wipac/skydriver:local


  #############################################################################
  # TAG & RELEASE
  #############################################################################

  tag-and-release:
    # only run on main/default
    if: format('refs/heads/{0}', github.event.repository.default_branch) == github.ref
    needs:
      - py-versions
      - flake8
      - mypy
      - py-setup
      - py-dependencies
      - unit-tests
      - integration-tests
      - test-build-docker
    uses: WIPACrepo/wipac-dev-workflows/.github/workflows/tag-and-release.yml@v1.5
    with:
      project-type: python
      python-version: "${{ fromJSON(needs.py-versions.outputs.matrix)[0] }}"
      release-artifacts: |
        py-dependencies-logs
    secrets:
      TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # trigger image-publish.yml
